name: Bindings Node.js

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
    paths:
      - "sql/**"
      - "bindings/nodejs/**"
      - ".github/workflows/bindings.nodejs.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          cache-key: bindings-nodejs-integration
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Corepack
        working-directory: bindings/nodejs
        run: corepack enable
      - name: Install dependencies
        working-directory: bindings/nodejs
        run: |
          pnpm install --frozen-lockfile
      - name: Check format
        working-directory: bindings/nodejs
        run: pnpm run prettier --check .
      - name: Build
        working-directory: bindings/nodejs
        run: pnpm build:debug
      - name: Check diff
        run: git diff --exit-code
      - run: make -C tests test-bindings-nodejs

  build:
    needs: integration
    name: build-${{ matrix.target }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { target: x86_64-unknown-linux-gnu, runner: ubuntu-20.04 }
          - { target: aarch64-unknown-linux-gnu, runner: ubuntu-20.04 }
          - { target: aarch64-unknown-linux-musl, runner: ubuntu-latest }
          - { target: x86_64-unknown-linux-musl, runner: ubuntu-latest }
          - { target: x86_64-pc-windows-msvc, runner: windows-2019 }
          - { target: x86_64-apple-darwin, runner: macos-13 }
          - { target: aarch64-apple-darwin, runner: macos-14 }
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup
        with:
          cache-key: bindings-nodejs-${{ matrix.target }}
          target: ${{ matrix.target }}
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install ziglang
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.11.0
      - name: Corepack
        working-directory: bindings/nodejs
        run: corepack enable
      - name: Install dependencies
        working-directory: bindings/nodejs
        run: pnpm install --immutable
      - name: build
        working-directory: bindings/nodejs
        shell: bash
        run: |
          export NAPI_TARGET=${{ matrix.target }}
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            pnpm build:debug
          else
            pnpm build
          fi
      - name: strip for macos
        if: endsWith(matrix.target, '-apple-darwin')
        working-directory: bindings/nodejs
        run: |
          strip -x *.node
      - uses: actions/upload-artifact@v4
        with:
          name: bindings-nodejs-${{ matrix.target }}
          path: bindings/nodejs/*.node

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment:
      name: npmjs.com
      url: https://www.npmjs.com/package/databend-driver
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Corepack
        working-directory: bindings/nodejs
        run: corepack enable
      - name: Install dependencies
        working-directory: bindings/nodejs
        run: pnpm install --frozen-lockfile
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: bindings/nodejs/artifacts
          pattern: bindings-nodejs-*
          merge-multiple: true
      - name: Move artifacts
        shell: bash
        working-directory: bindings/nodejs
        run: |
          ls -lRh artifacts
          pnpm run napi artifacts
          ls -lRh npm
      - name: Add LICENSE
        run: cp LICENSE ./bindings/nodejs
      - name: Publish
        working-directory: bindings/nodejs
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          pnpm publish --access public
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
