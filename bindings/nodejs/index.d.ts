/*
  * Copyright 2021 Datafuse Labs
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */

/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export class Client {
  constructor(dsn: string)
  info(): Promise<ConnectionInfo>
  version(): Promise<string>
  exec(sql: string): Promise<number>
  queryRow(sql: string): Promise<Row | null>
  queryIter(sql: string): Promise<RowIterator>
  queryIterExt(sql: string): Promise<RowIteratorExt>
  streamLoad(sql: string, data: Array<Array<string>>): Promise<QueryProgress>
}
export class ConnectionInfo { }
export class Schema {
  get fields(): Array<Field>
}
export class Field {
  get name(): string
  get dataType(): string
}
export class RowIterator {
  next(): Promise<Error | Row | null>
}
export class RowIteratorExt {
  next(): Promise<Error | RowOrProgress | null>
  schema(): Schema
}
export class RowOrProgress {
  get row(): Row | null
  get progress(): QueryProgress | null
}
export class Row {
  values(): Array<any>
}
export class QueryProgress {
  get totalRows(): bigint
  get totalBytes(): bigint
  get readRows(): bigint
  get readBytes(): bigint
  get writeRows(): bigint
  get writeBytes(): bigint
}
